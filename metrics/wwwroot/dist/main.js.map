{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Product/product-list/product-list.component.html","webpack:///./src/app/Product/product-list/product-list.component.scss","webpack:///./src/app/Product/product-list/product-list.component.ts","webpack:///./src/app/Product/product.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/http-interceptor.ts","webpack:///./src/app/services/base-rest-api.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,ie;;;;;;;;;;;ACAA,+DAA+D,uK;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACA;AAUlD;IAME,8BAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAJ3C,UAAK,GAAU;YACpB,IAAI,EAAE,CAAC;YACP,IAAI,EAAE,EAAE;SACT,CAAC;QAEA,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxC,CAAC;IAEM,8CAAe,GAAtB,UAAuB,KAA2B;QAChD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,uCAAQ,GAAR;IACA,CAAC;IAjBU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAOoC,+DAAc;OANvC,oBAAoB,CAmBhC;IAAD,2BAAC;CAAA;AAnBgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXU;AAC0B;AACrB;AAKhD;IAAoC,kCAAkB;IACpD,wBAAY,IAAgB;eAC1B,kBAAM,IAAI,EAAE,SAAS,CAAC;IACxB,CAAC;IAHU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAEkB,+DAAU;OADjB,cAAc,CAI1B;IAAD,qBAAC;CAAA,CAJmC,kFAAkB,GAIrD;AAJ0B;;;;;;;;;;;;;;;;;;;;;;;;ACPY;AACc;AAC8B;AAEnF,IAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,iGAAoB,EAAC;IACnD,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE;CACxD,CAAC;AAMF;IAAA;IACA,CAAC;IADY,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAC5B;IAAD,uBAAC;CAAA;AAD4B;;;;;;;;;;;;ACb7B,sD;;;;;;;;;;;ACAA,+DAA+D,+H;;;;;;;;;;;;;;;;;;;;;ACArB;AAO1C;IALA;QAME,UAAK,GAAG,aAAa,CAAC;IACxB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEe;AACT;AACW;AAC2B;AACN;AACN;AAClB;AAoBvD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAjBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,iGAAoB;aACrB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,uEAAU;gBACV,4FAAuB;gBACvB,qEAAgB;aACjB;YACD,SAAS,EAAE;gBACT,EAAC,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,qEAAmB,EAAE,KAAK,EAAE,IAAI,EAAC;aACzE;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;AC7BmB;AAC8D;AAIvG;IAAA;IAUA,CAAC;IATC,uCAAS,GAAT,UAAU,GAAqB,EAAE,IAAiB;QAChD,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC9B,6BAA6B,EAAE,GAAG;YAClC,8BAA8B,EAAE,GAAG;YACnC,8BAA8B,EAAE,GAAG;SACpC,CAAC,CAAC;QACH,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,EAAC,OAAO,WAAC,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC1B,CAAC;IATU,mBAAmB;QAD/B,gEAAU,EAAE;OACA,mBAAmB,CAU/B;IAAD,0BAAC;CAAA;AAV+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLW;AACM;AACD;AAEsB;AAKtE;IAAwC,sCAA+B;IAGrE,4BAAoB,UAAsB,EAAY,MAAc;QAApE,YACE,kBAAM,IAAI,CAAC,SACZ;QAFmB,gBAAU,GAAV,UAAU,CAAY;QAAY,YAAM,GAAN,MAAM,CAAQ;QADpE,cAAQ,GAAW,yBAAyB,CAAC;;IAG7C,CAAC;IAEM,kCAAK,GAAZ,UAAa,KAAU;QAAvB,iBAGC;QAFC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;aAC3B,SAAS,CAAC,WAAC,IAAI,wBAAM,IAAI,aAAC,CAAC,CAAC,EAAb,CAAa,CAAC,CAAC;IACnC,CAAC;IAES,kCAAK,GAAf,UAAgB,MAAc,EAAE,KAAU;QACxC,IAAM,QAAQ,GAAG,KAAG,4FAAyB,CAAC,KAAK,CAAG,CAAC;QACvD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAiB,KAAG,IAAI,CAAC,QAAQ,GAAG,MAAM,SAAI,QAAU,CAAC,CAAC;IACtF,CAAC;IAfU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIgC,+DAAU;OAH/B,kBAAkB,CAgB9B;IAAD,yBAAC;CAAA,CAhBuC,oDAAe,GAgBtD;AAhB8B;;;;;;;;;;;;;ACT/B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<kendo-grid [filterable]=\\\"true\\\" [pageSize]=\\\"state.take\\\" [skip]=\\\"state.skip\\\" (dataStateChange)=\\\"dataStateChange($event)\\\"\\r\\n            [sortable]=\\\"true\\\" pageable=\\\"true\\\" [sort]=\\\"state.sort\\\" [data]=\\\"view | async\\\">\\r\\n  <kendo-grid-messages>\\r\\n\\r\\n  </kendo-grid-messages>\\r\\n  <kendo-grid-column field=\\\"name\\\" title=\\\"Название\\\"></kendo-grid-column>\\r\\n  <kendo-grid-column field=\\\"price\\\" title=\\\"Цена\\\"></kendo-grid-column>\\r\\n</kendo-grid>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1Byb2R1Y3QvcHJvZHVjdC1saXN0L3Byb2R1Y3QtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport {ProductService} from \"../product.service\";\r\nimport {State} from \"@progress/kendo-data-query\";\r\nimport {DataStateChangeEvent, GridDataResult} from \"@progress/kendo-angular-grid\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Component({\r\n  selector: 'app-product-list',\r\n  templateUrl: './product-list.component.html',\r\n  styleUrls: ['./product-list.component.scss']\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n  public view: Observable<GridDataResult>;\r\n  public state: State = {\r\n    skip: 0,\r\n    take: 50\r\n  };\r\n  constructor(private productService: ProductService) {\r\n    this.view = productService;\r\n    this.productService.query(this.state);\r\n  }\r\n\r\n  public dataStateChange(state: DataStateChangeEvent): void {\r\n    this.state = state;\r\n    this.productService.query(state);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BaseRestApiService} from \"../services/base-rest-api.service\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService extends BaseRestApiService {\r\n  constructor(http: HttpClient) {\r\n    super(http, 'product')\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {ProductListComponent} from './Product/product-list/product-list.component';\r\n\r\nconst routes: Routes = [\r\n  {path: 'products', component: ProductListComponent},\r\n  { path: '', redirectTo: 'products', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'app-metrics';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { GridModule } from '@progress/kendo-angular-grid';\r\nimport { ProductListComponent } from './Product/product-list/product-list.component';\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\r\nimport {HttpCorsInterceptor} from \"./http-interceptor\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ProductListComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    GridModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    {provide: HTTP_INTERCEPTORS, useClass: HttpCorsInterceptor, multi: true}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Injectable} from \"@angular/core\";\r\nimport {HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class HttpCorsInterceptor implements HttpInterceptor {\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const headers = new HttpHeaders({\r\n      'access-control-allow-origin': '*',\r\n      'access-control-allow-headers': '*',\r\n      'access-control-allow-methods': '*'\r\n    });\r\n    req = req.clone({headers});\r\n    return next.handle(req);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Observable} from \"rxjs\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {GridDataResult} from \"@progress/kendo-angular-grid\";\r\nimport { toDataSourceRequestString } from '@progress/kendo-data-query'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BaseRestApiService extends BehaviorSubject<GridDataResult> {\r\n\r\n  Base_url: string = 'https://localhost:5001/';\r\n  constructor(private httpClient: HttpClient, protected entity: string) {\r\n    super(null);\r\n  }\r\n\r\n  public query(state: any): void {\r\n    this.fetch(this.entity, state)\r\n      .subscribe(x => super.next(x));\r\n  }\r\n\r\n  protected fetch(entity: string, state: any): Observable<GridDataResult> {\r\n    const queryStr = `${toDataSourceRequestString(state)}`;\r\n    return this.httpClient.get<GridDataResult>(`${this.Base_url}${entity}?${queryStr}`);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}